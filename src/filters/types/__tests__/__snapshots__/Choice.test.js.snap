// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Choice Snapshots renders default 1`] = `
<Select
  className="objectlist-current-filter__active-status"
  getOptionLabel={[Function]}
  getOptionValue={[Function]}
  isMulti={false}
  loadOptions={[Function]}
  onChange={[Function]}
  onInputChange={[Function]}
  options={undefined}
  placeholder="Any value"
  styles={
    Object {
      "control": [Function],
      "dropdownIndicator": [Function],
      "multiValue": [Function],
      "multiValueLabel": [Function],
    }
  }
  value={44}
/>
`;

exports[`Choice Snapshots renders with custom label key 1`] = `
<Select
  className="objectlist-current-filter__active-status"
  getOptionLabel={[Function]}
  getOptionValue={[Function]}
  isMulti={false}
  loadOptions={[Function]}
  onChange={[Function]}
  onInputChange={[Function]}
  options={undefined}
  placeholder="Any value"
  styles={
    Object {
      "control": [Function],
      "dropdownIndicator": [Function],
      "multiValue": [Function],
      "multiValueLabel": [Function],
    }
  }
  value={44}
/>
`;

exports[`Choice Snapshots renders with custom option renderer 1`] = `
<Select
  className="objectlist-current-filter__active-status"
  components={
    Object {
      "Option": [Function],
    }
  }
  getOptionLabel={[Function]}
  getOptionValue={[Function]}
  isMulti={false}
  loadOptions={[Function]}
  onChange={[Function]}
  onInputChange={[Function]}
  options={undefined}
  placeholder="Any value"
  styles={
    Object {
      "control": [Function],
      "dropdownIndicator": [Function],
      "multiValue": [Function],
      "multiValueLabel": [Function],
    }
  }
  value={44}
/>
`;

exports[`Choice Snapshots renders with custom value key 1`] = `
<Select
  className="objectlist-current-filter__active-status"
  getOptionLabel={[Function]}
  getOptionValue={[Function]}
  isMulti={false}
  loadOptions={[Function]}
  onChange={[Function]}
  onInputChange={[Function]}
  options={undefined}
  placeholder="Any value"
  styles={
    Object {
      "control": [Function],
      "dropdownIndicator": [Function],
      "multiValue": [Function],
      "multiValueLabel": [Function],
    }
  }
  value={44}
/>
`;

exports[`Choice Snapshots renders with multiple choice 1`] = `
<Select
  className="objectlist-current-filter__active-status"
  getOptionLabel={[Function]}
  getOptionValue={[Function]}
  isMulti={true}
  loadOptions={[Function]}
  onChange={[Function]}
  onInputChange={[Function]}
  options={undefined}
  placeholder="Any value"
  styles={
    Object {
      "control": [Function],
      "dropdownIndicator": [Function],
      "multiValue": [Function],
      "multiValueLabel": [Function],
    }
  }
  value={44}
/>
`;

exports[`Choice Snapshots renders with options 1`] = `
<Select
  className="objectlist-current-filter__active-status"
  getOptionLabel={[Function]}
  getOptionValue={[Function]}
  isMulti={false}
  loadOptions={[Function]}
  onChange={[Function]}
  onInputChange={[Function]}
  options={
    Array [
      Object {
        "label": "One",
        "value": 1,
      },
    ]
  }
  placeholder="Any value"
  styles={
    Object {
      "control": [Function],
      "dropdownIndicator": [Function],
      "multiValue": [Function],
      "multiValueLabel": [Function],
    }
  }
  value={44}
/>
`;

exports[`Choice Snapshots renders with placeholder 1`] = `
<Select
  className="objectlist-current-filter__active-status"
  getOptionLabel={[Function]}
  getOptionValue={[Function]}
  isMulti={false}
  loadOptions={[Function]}
  onChange={[Function]}
  onInputChange={[Function]}
  options={undefined}
  placeholder="Testing testing"
  styles={
    Object {
      "control": [Function],
      "dropdownIndicator": [Function],
      "multiValue": [Function],
      "multiValueLabel": [Function],
    }
  }
  value={44}
/>
`;

exports[`Choice Snapshots renders with remote options 1`] = `
<Select.Async
  cacheOptions={true}
  className="objectlist-current-filter__active-status"
  getOptionLabel={[Function]}
  getOptionValue={[Function]}
  isMulti={false}
  loadOptions={[Function]}
  noOptionsMessage={[Function]}
  onChange={[Function]}
  onInputChange={[Function]}
  options={undefined}
  placeholder="Any value"
  styles={
    Object {
      "control": [Function],
      "dropdownIndicator": [Function],
      "multiValue": [Function],
      "multiValueLabel": [Function],
    }
  }
  value={44}
/>
`;
